apply plugin: 'com.tencent.matrix-plugin'
matrix {
    logLevel "D"
    trace {
        enable = false // if you don't want to use trace canary, set false
        baseMethodMapFile = "${project.projectDir}/matrixTrace/methodMapping.txt"
        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
    }
//    removeUnusedResources {
//        variant = "debug"
//        v2 = removeUnusedResourcesV2Enable
//        if (!v2) {
//            unusedResources = project.ext.unusedResourcesSet
//        }
//        enable true
//        needSign true
//        shrinkArsc true
//        shrinkDuplicates true
//        use7zip = true
//        zipAlign = true
//        embedResGuard true
//
//        apkCheckerPath = "${project.configurations.apkCheckerDependency.resolve().find { it.name.startsWith("matrix-apk-canary") }.getAbsolutePath()}"
//        sevenZipPath = "${project.configurations.sevenZipDependency.resolve().getAt(0).getAbsolutePath()}"
//        //Notice: You need to modify the  value of $apksignerPath on different platform. the value below only suitable for Mac Platform,
//        //if on Windows, you may have to  replace apksigner with apksigner.bat.
//        apksignerPath = "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.getBuildToolsVersion()}/apksigner"
//        zipAlignPath = "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.getBuildToolsVersion()}/zipalign"
//        ignoreResources = ["R.id.*", "R.bool.*", "R.layout.unused_layout"]
//    }
}

project.tasks.whenTaskAdded {
    if (it.name?.equals("assembleDebug") || it.name?.equals("assembleRelease")) {
        it.dependsOn "cleanBuildDirTask".with { taskName ->
            if (tasks.findByName(taskName)) {
                return tasks.findByName(taskName)
            }
            return task(taskName) {
                doFirst {
                    logger.lifecycle "Clean app bulid dir before assemble"
                    project.file(project.buildDir).deleteDir()
                }
            }
        }
    }
}